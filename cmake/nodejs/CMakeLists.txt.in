# DO NOT EDIT
# This file was automatically processed by npm-preinstall.js and is intended for use with cmake-js.

cmake_minimum_required(VERSION 3.10)

project({{{PROJECT_NAME}}}-Node)

include(ExternalProject)

# Include N-API wrappers
execute_process(COMMAND node -p "require('node-addon-api').include"
        WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
        OUTPUT_VARIABLE NODE_ADDON_API_DIR
        )
string(REPLACE "\n" "" NODE_ADDON_API_DIR ${NODE_ADDON_API_DIR})
string(REPLACE "\"" "" NODE_ADDON_API_DIR ${NODE_ADDON_API_DIR})

set(NODE_INCLUDE_DIRS ${CMAKE_JS_INC} ${NODE_ADDON_API_DIR})
# This has to be done to avoid losing directories when passing to ExternalProject.
string(REPLACE ";" "|" NODE_INCLUDE_DIRS_ALT_SEP "${NODE_INCLUDE_DIRS}")
set(NODE_LIBRARIES ${CMAKE_JS_LIB})
string(REPLACE ";" "|" NODE_LIBRARIES_ALT_SEP "${NODE_LIBRARIES}")
if(MSVC)
set(NODE_REQUIRED_SOURCES ${CMAKE_CURRENT_LIST_DIR}/win_delay_load_hook.cc)
else()
set(NODE_REQUIRED_SOURCES ${CMAKE_JS_SRC})
endif()
string(REPLACE ";" "|" NODE_REQUIRED_SOURCES_ALT_SEP "${NODE_REQUIRED_SOURCES}")

ExternalProject_Add(Lightning
                    PREFIX "{{{JS_BINARY_DIR}}}/extproj"
                    SOURCE_DIR "{{{JS_SOURCE_DIR}}}"
                    BINARY_DIR "{{{JS_BINARY_DIR}}}"
                    BUILD_ALWAYS 1
                    LIST_SEPARATOR | # Use the alternate list separator
                    CMAKE_ARGS {{{JS_CMAKE_ARGS}}} -DCMAKE_INSTALL_PREFIX={{{JS_INSTALL_DIR}}} -DNODE_INCLUDE_DIRS=${NODE_INCLUDE_DIRS_ALT_SEP} -DNODE_LIBRARIES=${NODE_LIBRARIES_ALT_SEP} -DNODE_REQUIRED_SOURCES=${NODE_REQUIRED_SOURCES_ALT_SEP}
)
